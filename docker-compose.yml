services:
  api:
    build: .
    ports:
      - "3000:3000"
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: on-failure
    volumes:
      - ./:/app:cached   # Mount source code to container for live editing
      - node_modules:/app/node_modules  # Named volume for node_modules (isolated)
    command: sh -c "npx prisma migrate deploy && npm run dev"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: auctiondb
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:8
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # importer:
  #   build: .
  #   command: sh -c "sleep 10 && npm run import"
  #   depends_on:
  #     api:
  #       condition: service_healthy
  #   env_file: .env
  #   volumes:
  #     - ./:/app:cached
  #     - /app/node_modules

volumes:
  pgdata:
  node_modules:
